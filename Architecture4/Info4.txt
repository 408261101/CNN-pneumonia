1.神經結構：
class CustomCNN(nn.Module):
    def __init__(self):
        super(CustomCNN, self).__init__()
        # 卷積層
        self.conv1 = nn.Conv2d(3, 32, kernel_size=3, padding=1)  # 輸入通道 = 3（RGB）
        self.conv2 = nn.Conv2d(32, 64, kernel_size=3, padding=1)
        self.conv3 = nn.Conv2d(64, 128, kernel_size=3, padding=1)

        # 池化層
        self.pool = nn.MaxPool2d(kernel_size=2, stride=2)

        # 全連接層
        self.fc1 = nn.Linear(128 * 32 * 32, 1024)  # 池化層之後的尺寸為32x32
        self.fc2 = nn.Linear(1024, 512)
        self.fc3 = nn.Linear(512, 10)  # 例如：10個輸出類別

    def forward(self, x):
        # 應用卷積和池化層
        x = self.pool(F.relu(self.conv1(x)))
        x = self.pool(F.relu(self.conv2(x)))
        x = self.pool(F.relu(self.conv3(x)))

        # 將輸出展平為全連接層
        x = x.view(-1, 128 * 32 * 32)

        # 應用全連接層
        x = F.relu(self.fc1(x))
        x = F.relu(self.fc2(x))
        x = self.fc3(x)

        return x


2.模型總參數量
   134841930

3.卷積層參數量
    93248

4.全連接層參數量
   134748682

5.優化器
  SGD

6.學習率
  0.01